/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Obligatorio.Ficha;
import Obligatorio.Partida;
import Obligatorio.Sistema;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Santiago
 */
public class VJuego extends javax.swing.JFrame {

    /**
     * Creates new form VJuego
     */
    private JButton[][] botones;
    private Partida modelo;

    public VJuego() {
        initComponents();
    }
    

    

    public VJuego(Partida unJuego) {
        initComponents();
        modelo = unJuego;
        ButtonGroup btrGroup = new ButtonGroup();
        btrGroup.add(A);
        btrGroup.add(D);
        btrGroup.add(I);
        panelJuego.setLayout(new GridLayout(8, 9));
        botones = new JButton[9][10];
        for (int i = 1; i <= 8; i++) {
            for (int j = 1; j <= 9; j++) {
                JButton jButton = new JButton();
                jButton.setMargin(new Insets(-5, -5, -5, -5)); 
                jButton.addActionListener(new ListenerBoton(i, j));
                panelJuego.add(jButton);
                botones[i][j] = jButton;
            }
        }
        armarBotones();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panelJuego = new javax.swing.JPanel();
        A = new javax.swing.JRadioButton();
        D = new javax.swing.JRadioButton();
        I = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 600));
        getContentPane().setLayout(null);

        javax.swing.GroupLayout panelJuegoLayout = new javax.swing.GroupLayout(panelJuego);
        panelJuego.setLayout(panelJuegoLayout);
        panelJuegoLayout.setHorizontalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );
        panelJuegoLayout.setVerticalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );

        getContentPane().add(panelJuego);
        panelJuego.setBounds(10, 10, 260, 230);

        buttonGroup1.add(A);
        A.setSelected(true);
        A.setText("Adelante");
        getContentPane().add(A);
        A.setBounds(280, 90, 69, 23);

        buttonGroup1.add(D);
        D.setText("Derecha");
        getContentPane().add(D);
        D.setBounds(280, 130, 65, 23);

        buttonGroup1.add(I);
        I.setText("Izquierda");
        getContentPane().add(I);
        I.setBounds(280, 170, 71, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VJuego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VJuego().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton A;
    private javax.swing.JRadioButton D;
    private javax.swing.JRadioButton I;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel panelJuego;
    // End of variables declaration//GEN-END:variables

    private class ListenerBoton implements ActionListener {

        private int x;
        private int y;

        public ListenerBoton(int i, int j) {
// en el constructor se almacena la fila y columna que se presionó
            x = i;
            y = j;
        }

        public void actionPerformed(ActionEvent e) {
// cuando se presiona un botón, se ejecutará este método
            clickBoton(x, y);
        }
    }

    private void clickBoton(int fila, int columna) {
        String[] comando = new String[2];
        Ficha[][] mat = modelo.getTablero();
        Ficha f= mat[fila][columna];
        comando[0] = f.getTipo();
        String movimiento =""+f.getValor();
        
        if (A.isSelected()){
            movimiento+="A";
        }
        if (D.isSelected()){
            movimiento+="D";
        }
        if (I.isSelected()){
            movimiento+="D";
        }
        comando[1]=movimiento;
        if (modelo.recibirComando(comando)) {
            armarBotones();
            if(modelo.isTerminado()){
                //Aca va lo de afuera del while de prueba
            }
        }
        
    }
    private void armarBotones(){
        Ficha[][] mat= modelo.getTablero();
        for (int i = 1; i < 9; i++) {
            for (int j = 1; j < 10; j++) {
                if (mat[i][j].getTipo().equals("Rojo")) {
                    JButton boton = botones[i][j];
                    boton.setBackground(Color.red);
                    boton.setText(""+mat[i][j].getValor());
                }
                if (mat[i][j].getTipo().equals("Azul")) {
                    JButton boton = botones[i][j];
                    boton.setBackground(Color.blue);
                    boton.setText(""+mat[i][j].getValor());
                }
                if (mat[i][j].getTipo().equals("Vacio")) {
                    JButton boton = botones[i][j];
                    boton.setBackground(Color.LIGHT_GRAY);
                    boton.setText("");
                }
            }
        }
        
    }
    




}
